version: '3.5'
services:

  postgres1:
    image: postgres
    container_name: postgres_moex2
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres:/data/postgres
#      - ${WD}/postgress_db/scripts/:/docker-entrypoint-initdb.d/
#      - pg_data:/var/lib/postgresql/data
    ports:
      - 5440:5432
    networks:
      - my_network

  moex2:
    image: leovante/moex2:latest
    container_name: moex2
    depends_on:
      - postgres1
#    build:
#      context: ./
#      dockerfile: ./dockerfile
#      args:
#        JAR_FILE: target/moex2-1.0-SNAPSHOT.jar
    environment:
      APP_PORT: 8080
      DB_HOST: postgres1
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JVM_OPTS: >
        -XX:+CrashOnOutOfMemoryError
    restart: always
    ports:
      - 24300:8080
    networks:
      - my_network
    command: [ "java","-jar","-Dliquibase.hub.mode=off","/usr/local/service/moex2-1.0-SNAPSHOT.jar" ]
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  pgadmin:
    container_name: pgadmin
    build:
      context: .
      dockerfile: ./dockerfile_pgadmin/Dockerfile
    environment:
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
#      PGADMIN_CONFIG_SERVER_MODE: 'True'
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - 5050:80
    networks:
      - my_network
    depends_on:
      - postgres1

  redis:
    image: redis
    restart: always
    volumes:
      - redis:/data

  superset:
    container_name: "superset"
    build:
      context: .
      dockerfile: ./dockerfile_superset/Dockerfile
    restart: always
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY}
      SUPERSET_HOME: /etc/superset
    ports:
      - "8088:8088"
    depends_on:
      - redis

volumes:
  postgres:
  pg_data:
    external: false
    name: pg_data
  redis:
    external: false
    name: redis

networks:
  my_network:
